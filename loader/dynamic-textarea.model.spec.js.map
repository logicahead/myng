{"version":3,"sources":["core/src/model/textarea/dynamic-textarea.model.spec.ts"],"names":[],"mappings":";AAAA,mEAIkC;AAElC,QAAQ,CAAC,iCAAiC,EAAE;IAExC,IAAI,KAA2B,EAC3B,MAAM,GAAG;QACL,EAAE,EAAE,UAAU;QACd,UAAU,EAAE,EAAC,QAAQ,EAAE,IAAI,EAAE,SAAS,EAAE,CAAC,EAAC;KAC7C,CAAC;IAEN,UAAU,CAAC,cAAM,OAAA,KAAK,GAAG,IAAI,6CAAoB,CAAC,MAAM,CAAC,EAAxC,CAAwC,CAAC,CAAC;IAE3D,EAAE,CAAC,6BAA6B,EAAE;QAE9B,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAC5B,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACnC,MAAM,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,QAAQ,EAAE,CAAC;QACvC,MAAM,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC3C,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;QACpC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,QAAQ,EAAE,CAAC;QAC/B,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;QACrC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC3B,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,2DAAkC,CAAC,CAAC;QAC/D,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,QAAQ,EAAE,CAAC;QAC/B,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,wDAA+B,CAAC,CAAC;IAChE,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,4CAA4C,EAAE;QAE7C,MAAM,CAAC,cAAM,OAAA,IAAI,6CAAoB,CAAC,EAAE,CAAC,EAA5B,CAA4B,CAAC;aACrC,OAAO,CAAC,IAAI,KAAK,CAAC,yDAAyD,CAAC,CAAC,CAAC;IACvF,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,wCAAwC,EAAE;QAEzC,KAAK,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAEjC,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACtC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,4BAA4B,EAAE;QAE7B,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;QAE7C,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;QAClC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QACnC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,CAAC;QACvF,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACrC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,2DAAkC,CAAC,CAAC;IAClE,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC","file":"dynamic-textarea.model.spec.js","sourcesContent":["import {\n    DYNAMIC_FORM_CONTROL_TYPE_TEXTAREA,\n    DYNAMIC_FORM_TEXTAREA_WRAP_SOFT,\n    DynamicTextAreaModel\n} from \"./dynamic-textarea.model\";\n\ndescribe(\"DynamicTextAreaModel test suite\", () => {\n\n    let model: DynamicTextAreaModel,\n        config = {\n            id: \"textarea\",\n            validators: {required: null, minLength: 5}\n        };\n\n    beforeEach(() => model = new DynamicTextAreaModel(config));\n\n    it(\"should initialize correctly\", () => {\n\n        expect(model.cols).toBe(20);\n        expect(model.disabled).toBe(false);\n        expect(model.errorMessages).toBeNull();\n        expect(model.hasErrorMessages).toBe(false);\n        expect(model.id).toEqual(config.id);\n        expect(model.label).toBeNull();\n        expect(model.name).toEqual(model.id);\n        expect(model.rows).toBe(2);\n        expect(model.type).toEqual(DYNAMIC_FORM_CONTROL_TYPE_TEXTAREA);\n        expect(model.value).toBeNull();\n        expect(model.wrap).toEqual(DYNAMIC_FORM_TEXTAREA_WRAP_SOFT);\n    });\n\n    it(\"should throw when no model id is specified\", () => {\n\n        expect(() => new DynamicTextAreaModel({}))\n            .toThrow(new Error(\"string id must be specified for DynamicFormControlModel\"));\n    });\n\n    it(\"should set disabled property correctly\", () => {\n\n        model.disabledUpdates.next(true);\n\n        expect(model.disabled).toBe(true);\n    });\n\n    it(\"should serialize correctly\", () => {\n\n        let json = JSON.parse(JSON.stringify(model));\n\n        expect(json.id).toEqual(model.id);\n        expect(json.cols).toBe(model.cols);\n        expect(Object.keys(json.validators).length).toBe(Object.keys(model.validators).length);\n        expect(json.value).toBe(model.value);\n        expect(json.type).toEqual(DYNAMIC_FORM_CONTROL_TYPE_TEXTAREA);\n    });\n});"]}