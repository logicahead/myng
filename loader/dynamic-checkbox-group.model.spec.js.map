{"version":3,"sources":["core/src/model/checkbox/dynamic-checkbox-group.model.spec.ts"],"names":[],"mappings":"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","file":"dynamic-checkbox-group.model.spec.js","sourcesContent":["import {DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX_GROUP, DynamicCheckboxGroupModel} from \"./dynamic-checkbox-group.model\";\nimport {DynamicCheckboxModel} from \"./dynamic-checkbox.model\";\n\ndescribe(\"DynamicCheckboxGroupModel test suite\", () => {\n\n    let model: DynamicCheckboxGroupModel,\n        config = {\n            id: \"checkboxGroup\",\n            group: [\n                new DynamicCheckboxModel(\n                    {\n                        id: \"checkbox1\",\n                        label: \"Checkbox 1\",\n                        value: true\n                    }\n                ),\n                new DynamicCheckboxModel(\n                    {\n                        id: \"checkbox2\",\n                        label: \"Checkbox 2\",\n                        value: false\n                    }\n                ),\n                new DynamicCheckboxModel(\n                    {\n                        id: \"checkbox3\",\n                        label: \"Checkbox 3\",\n                        value: false\n                    }\n                )\n            ]\n        };\n\n    beforeEach(() => model = new DynamicCheckboxGroupModel(config));\n\n    it(\"should initialize correctly\", () => {\n\n        expect(model.id).toEqual(config.id);\n        expect(model.group.length).toBe(config.group.length);\n        expect(model.legend).toBeNull();\n        expect(model.type).toEqual(DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX_GROUP);\n    });\n\n    it(\"should check checkboxes correctly\", () => {\n\n        model.check(0, 2);\n\n        expect(model.group[0].value).toBe(true);\n        expect(model.group[2].value).toBe(true);\n    });\n\n    it(\"should check all checkboxes correctly\", () => {\n\n        model.checkAll();\n\n        expect(model.group[0].value).toBe(true);\n        expect(model.group[1].value).toBe(true);\n        expect(model.group[2].value).toBe(true);\n    });\n\n    it(\"should uncheck checkboxes correctly\", () => {\n\n        model.uncheck(0, 2);\n\n        expect(model.group[0].value).toBe(false);\n        expect(model.group[2].value).toBe(false);\n    });\n\n    it(\"should uncheck all checkboxes correctly\", () => {\n\n        model.uncheckAll();\n\n        expect(model.group[0].value).toBe(false);\n        expect(model.group[1].value).toBe(false);\n        expect(model.group[2].value).toBe(false);\n    });\n\n    it(\"should serialize correctly\", () => {\n\n        let json = JSON.parse(JSON.stringify(model));\n\n        expect(json.id).toEqual(model.id);\n        expect(json.type).toEqual(DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX_GROUP);\n    });\n\n    it(\"should serialize correctly\", () => {\n\n        let json = JSON.parse(JSON.stringify(model));\n\n        expect(json.id).toEqual(model.id);\n        expect(json.type).toEqual(DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX_GROUP);\n    });\n});"]}